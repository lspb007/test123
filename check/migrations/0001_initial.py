# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2019-07-23 00:31
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department2System',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('d', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Department', verbose_name='巡检科室')),
            ],
            options={
                'verbose_name': '组&系统对应关系',
                'verbose_name_plural': '组&系统对应关系',
            },
        ),
        migrations.CreateModel(
            name='LocationDict',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='机房位置')),
                ('desc', models.CharField(max_length=200, verbose_name='描述')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now)),
            ],
            options={
                'verbose_name': '机房位置说明',
                'verbose_name_plural': '机房位置说明',
            },
        ),
        migrations.CreateModel(
            name='NetworkDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('NetworkDevice_name', models.CharField(max_length=50, verbose_name='网络设备名称')),
                ('NetworkDevice_IP', models.GenericIPAddressField(verbose_name='IP地址')),
                ('SecurityDevice_user', models.CharField(blank=True, max_length=50, null=True, verbose_name='巡检账号')),
                ('SecurityDevice_pwd', models.CharField(blank=True, max_length=50, null=True, verbose_name='巡检密码')),
                ('auto_check', models.IntegerField(choices=[(1, '是'), (2, '否')], default=2, verbose_name='安全设备是否进行自动巡检')),
            ],
            options={
                'verbose_name': '网络设备信息说明',
                'verbose_name_plural': '网络设备信息说明',
            },
        ),
        migrations.CreateModel(
            name='ResourceInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_name', models.CharField(max_length=50, verbose_name='设备名称')),
                ('resource_IP', models.GenericIPAddressField(verbose_name='IP地址')),
                ('resource_user', models.CharField(blank=True, max_length=50, null=True, verbose_name='巡检账号')),
                ('resource_pwd', models.CharField(blank=True, max_length=50, null=True, verbose_name='巡检密码')),
                ('resource_sys', models.IntegerField(blank=True, choices=[(1, 'windows'), (2, 'linux'), (3, 'HP-UX'), (4, 'No monitoring')], null=True, verbose_name='操作系统')),
            ],
            options={
                'verbose_name': '服务器信息说明',
                'verbose_name_plural': '服务器信息说明',
            },
        ),
        migrations.CreateModel(
            name='SecurityDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SecurityDevice_name', models.CharField(max_length=50, verbose_name='安全设备名称')),
                ('SecurityDevice_IP', models.GenericIPAddressField(verbose_name='IP地址')),
                ('SecurityDevice_brand', models.CharField(max_length=50, verbose_name='安全设备品牌')),
                ('SecurityDevice_user', models.CharField(blank=True, max_length=50, null=True, verbose_name='巡检账号')),
                ('SecurityDevice_pwd', models.CharField(blank=True, max_length=50, null=True, verbose_name='巡检密码')),
                ('auto_check', models.IntegerField(choices=[(1, '是'), (2, '否')], default=2, verbose_name='安全设备是否进行自动巡检')),
            ],
            options={
                'verbose_name': '安全设备信息说明',
                'verbose_name_plural': '安全设备信息说明',
            },
        ),
        migrations.CreateModel(
            name='SystemInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='业务系统名称')),
                ('address', models.URLField(max_length=100, verbose_name=' 业务系统地址')),
                ('details', models.TextField(max_length=1500, verbose_name='系统详情')),
                ('admin', models.CharField(max_length=20, verbose_name='负责人')),
                ('backups', models.CharField(choices=[('True', '有'), ('Fales', '无')], default='无', max_length=10, verbose_name='异机数据备份')),
                ('checkmethod', models.TextField(max_length=2000, verbose_name='巡检方法')),
                ('auto_check', models.IntegerField(choices=[(1, '是'), (2, '否')], default=2, verbose_name='本业务线是否进行自动巡检')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='check.LocationDict', verbose_name='机房位置')),
            ],
            options={
                'verbose_name': '业务系统信息说明',
                'verbose_name_plural': '业务系统信息说明',
            },
        ),
        migrations.CreateModel(
            name='UserCheckDev',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=50, verbose_name='巡检人')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='巡检时间')),
                ('ckeckCPU', models.CharField(max_length=50, verbose_name='CPU占用率（%）')),
                ('checkMEM', models.CharField(max_length=50, verbose_name='内存使用率(%)')),
                ('checkDISK', models.CharField(max_length=50, verbose_name='硬盘使用率(%)')),
                ('service', models.IntegerField(choices=[(1, '正常'), (2, '故障')], default=1, verbose_name='服务和进程状态')),
                ('details', models.TextField(blank=True, null=True, verbose_name='故障描述')),
                ('dev_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='check.ResourceInfo', verbose_name='服务器')),
            ],
            options={
                'verbose_name': '基础设备巡检记录',
                'verbose_name_plural': '基础设备巡检记录',
                'ordering': ['-add_time'],
            },
        ),
        migrations.CreateModel(
            name='UserCheckNet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=50, verbose_name='巡检人')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='巡检时间')),
                ('UpstreamBandwidth', models.CharField(blank=True, max_length=50, null=True, verbose_name='上行带宽')),
                ('DownstreamBandwidth', models.CharField(blank=True, max_length=50, null=True, verbose_name='下行带宽')),
                ('details', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('Net_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='check.NetworkDevice', verbose_name='网络设备')),
            ],
            options={
                'verbose_name': '网络设备巡检记录',
                'verbose_name_plural': '网络设备巡检记录',
                'ordering': ['-add_time'],
            },
        ),
        migrations.CreateModel(
            name='UserCheckNetSys',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=50, verbose_name='巡检人')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='巡检时间')),
                ('CoreSwitch', models.TextField(verbose_name='核心交换机状态')),
                ('ConvergingSwitch', models.TextField(verbose_name='汇聚交换机状态')),
                ('details', models.TextField(blank=True, null=True, verbose_name='无线设备状态')),
            ],
            options={
                'verbose_name': '交换机巡检记录',
                'verbose_name_plural': '交换机巡检记录',
                'ordering': ['-add_time'],
            },
        ),
        migrations.CreateModel(
            name='UserCheckSec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=50, verbose_name='巡检人')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='巡检时间')),
                ('ckeckCPU', models.CharField(max_length=50, verbose_name='CPU占用率（%）')),
                ('checkMEM', models.CharField(max_length=50, verbose_name='内存使用率(%)')),
                ('checkSessionNum', models.CharField(max_length=50, verbose_name='会话连接数')),
                ('state', models.IntegerField(choices=[(1, '正常'), (2, '故障')], default=1, verbose_name='设备状态')),
                ('details', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('Sec_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='check.SecurityDevice', verbose_name='安全设备')),
            ],
            options={
                'verbose_name': '安全设备巡检记录',
                'verbose_name_plural': '安全设备巡检记录',
                'ordering': ['-add_time'],
            },
        ),
        migrations.CreateModel(
            name='UserCheckSys',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=50, verbose_name='巡检人')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='巡检时间')),
                ('sysisnormal', models.IntegerField(choices=[(1, '正常'), (2, '故障')], default=1, verbose_name='是否正常')),
                ('check_details', models.TextField(blank=True, null=True, verbose_name='故障描述')),
                ('details', models.TextField(blank=True, null=True, verbose_name='故障描述')),
                ('system_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='check.SystemInfo', verbose_name=' 业务系统')),
            ],
            options={
                'verbose_name': '应用系统巡检记录',
                'verbose_name_plural': '应用系统巡检记录',
                'ordering': ['-add_time'],
            },
        ),
        migrations.AddField(
            model_name='resourceinfo',
            name='resource_system',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='check.SystemInfo', verbose_name='所属业务系统'),
        ),
        migrations.AddField(
            model_name='department2system',
            name='s',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='check.SystemInfo', verbose_name='业务系统'),
        ),
    ]
